#ifndef QUEENS_SOLVER_H
#define QUEENS_SOLVER_H

#include <queens_board.h>

typedef enum : uint8
{
    QUEENS_SOLVER_STRATEGY_FIRST = 0u,
    QUEENS_SOLVER_STRATEGY_INVALID_QUEEN = QUEENS_SOLVER_STRATEGY_FIRST,
    QUEENS_SOLVER_STRATEGY_INVALID_ELIMINATION,
    QUEENS_SOLVER_STRATEGY_ELIMINATE_QUEEN_SURROUNDING,
    QUEENS_SOLVER_STRATEGY_ELIMINATE_LEFTOVER_COLORS,
    QUEENS_SOLVER_STRATEGY_LAST_FREE_ROW_OR_COLUMN,
    QUEENS_SOLVER_STRATEGY_LAST_AVAILABLE_COLOR_SHALL_BE_QUEEN,
    QUEENS_SOLVER_STRATEGY_GROUP_ONLY_IN_SINGLE_ROW_OR_COLUMN,
    QUEENS_SOLVER_STRATEGY_SINGLE_COLOR_IN_ROW_OR_COLUMN,
    QUEENS_SOLVER_STRATEGY_QUEEN_PLACEMENT_ELIMINATES_ALL_THE_COLORS_LEFT,
    QUEENS_SOLVER_STRATEGY_QUEEN_PLACEMENT_ELIMINATES_ENTIRE_ROW_OR_COLUMN,
    QUEENS_SOLVER_STRATEGY_N_COLOR_GROUPS_OCCUPYING_N_ROWS_OR_COLUMNS,
    QUEENS_SOLVER_STRATEGY_QUEEN_PLACEMENT_LEADS_TO_INVALID_FORCING_SEQUENCE,
    QUEENS_SOLVER_STRATEGY_LAST,
    QUEENS_SOLVER_SOLVED = 0xFEu,
    QUEENS_SOLVER_FAILED = 0xFFu
} QueensSolver_Strategy_t;

QueensSolver_Strategy_t QueensSolver_IncrementalSolve(QueensBoard_Board_t* board);
bool QueensSolver_IsBoardSolved(QueensBoard_Board_t* board);

#endif /* QUEENS_SOLVER_H */
